---
title: "Análisis invarianza PHQ9" 
subtitle: "Documento de trabajo"
author: "Roberto Cantillan | Matías Deneken"
date: today
format:
  html:
    toc-title: "Contenidos"
    theme: cosmo
    toc: true
    toc-depth: 3
    number-sections: true
    include-in-header:
      text: |
        <style>
          body::before {
            content: url('img/ciir_en-negro-vertical.jpg');
            display: block;
            text-align: center;
            margin-bottom: 5px; /* Reducido a 5px para un espacio mínimo */
            transform: scale(0.5);
          }
          body::before img {
            max-width: 100px;
            height: auto;
          }
          #title-block-header {
            margin-top: 0; /* Eliminado el margen superior */
          }
          .quarto-title {
            margin-top: 0; /* Asegura que no haya espacio extra arriba del título */
          }
        </style>
editor: visual
reference-location: margin
citation-location: margin
bibliography: PHQ9.bib
---

## Introducción

### Modelo Básico de Análisis Factorial

El modelo básico se expresa como:

$$Y_i = \Lambda F_i + U_i$$

Este modelo describe cómo las variables observadas ($Y_i$) se relacionan con factores latentes subyacentes ($F_i$) y factores únicos ($U_i$).

- $Y_i$ representa las variables que podemos medir directamente.
- $F_i$ son los factores comunes que influyen en múltiples variables observadas.
- $U_i$ representa la varianza única de cada variable observada, incluyendo el error de medición.
- $\Lambda$ contiene las cargas factoriales, que indican cuánto influye cada factor en cada variable observada.

### Modelo de Covarianza

$$\Sigma = \Lambda \Psi \Lambda' + \Theta$$

Este modelo describe la estructura de covarianza de las variables observadas.

- $\Sigma$ es la matriz de covarianza (o correlación) de las variables observadas.
- $\Psi$ es la matriz de covarianza de los factores latentes.
- $\Theta$ es una matriz diagonal de varianzas únicas.

Este modelo nos permite entender cómo se relacionan las variables observadas entre sí a través de los factores latentes.

### Modelo de Media

$$\mu = \tau + \Lambda \alpha$$

Este modelo describe las medias de las variables observadas.

- $\mu$ es el vector de medias de las variables observadas.
- $\tau$ es un vector de interceptos.
- $\alpha$ es un vector de medias de los factores latentes.

Este modelo nos ayuda a entender cómo los factores latentes influyen en las medias de las variables observadas.

## Modelos de Múltiples Grupos u Ocasiones

$$\Sigma_g = \Lambda_g \Psi_g \Lambda_g' + \Theta_g$$
$$\mu_g = \tau_g + \Lambda_g \alpha_g$$

Estos modelos extienden los anteriores a situaciones donde tenemos múltiples grupos o mediciones en diferentes momentos.

- El subíndice $g$ indica que los parámetros pueden variar entre grupos u ocasiones.
- Nos permiten comparar la estructura factorial entre diferentes poblaciones o a lo largo del tiempo.

### Niveles de Invarianza de Medición

1. **Invarianza Configural**: 
   - Asegura que la estructura básica del modelo (número de factores y patrón de cargas) es la misma en todos los grupos.
   - No requiere que los valores de las cargas sean iguales.

2. **Invarianza Débil (Métrica)**:
   - Requiere que las cargas factoriales ($\Lambda_g$) sean iguales entre grupos.
   - Implica que los factores tienen el mismo significado en todos los grupos.

3. **Invarianza Fuerte (Escalar)**:
   - Además de la invarianza débil, requiere que los interceptos ($\tau_g$) sean iguales.
   - Permite comparar las medias de los factores latentes entre grupos.

4. **Invarianza Estricta**:
   - Además de la invarianza fuerte, requiere que las varianzas residuales ($\Theta_g$) sean iguales.
   - Es el nivel más estricto de invarianza, raramente alcanzado en la práctica.

Estos niveles de invarianza son cruciales para asegurar que estamos midiendo los mismos constructos de la misma manera en diferentes grupos o momentos, permitiendo comparaciones significativas. Los análisis que siguen los realizaremos utilizando la librería Lavaan diseñada para entorno R @rosseelLavaanLatentVariable2012


## Análisis Invarianza ELRI - PHQ9 

El Cuestionario de Salud del Paciente-9 (PHQ-9) es una herramienta ampliamente utilizada para evaluar síntomas depresivos. Sin embargo, es crucial asegurar que este instrumento mantenga su validez y fiabilidad al aplicarse en diferentes grupos culturales y a lo largo del tiempo. Este reporte describe la estrategia propuesta para evaluar la invarianza de medición del PHQ-9 entre poblaciones indígenas y no indígenas, así como su invarianza longitudinal. 


- Nuestro estudio se centrará en dos aspectos principales:

  -   Invarianza entre grupos: Comparación entre poblaciones indígenas y no indígenas.
  -   Invarianza longitudinal: Evaluación de la consistencia de las mediciones a lo largo del tiempo.

Para abordar estos objetivos, adoptaremos una metodología basada en el Análisis Factorial Confirmatorio Multigrupo (MGCFA), siguiendo un enfoque similar al utilizado por @saundersMeasurementInvariancePHQ92023 en su estudio sobre la invarianza del PHQ-9 y GAD-7 entre géneros.

Propuesta de Análisis: 

1. Análisis Factorial Confirmatorio (CFA) Inicial

  +   Realizar un CFA del PHQ-9 para la muestra completa.
  +   Evaluar el ajuste del modelo utilizando los índices CFI, RMSEA y SRMR.

2. Análisis Factorial Confirmatorio Multigrupo (MGCFA) - Comparación entre Grupos

Realizaremos una serie de modelos anidados para evaluar diferentes niveles de invarianza:
  +   M1: Invarianza Configural

Misma estructura del modelo para ambos grupos (indígenas y no indígenas).
  +   M2: Invarianza Métrica

Cargas factoriales equivalentes entre grupos.

  +   M3: Invarianza Escalar

Cargas factoriales e interceptos equivalentes entre grupos.

  +   M4: Invarianza Residual

Cargas factoriales, interceptos y residuos equivalentes entre grupos.

  +   M5: M4 + Invarianza de Medias de Factores
  +   M6: M5 + Invarianza de Varianzas de Factores

3. MGCFA - Invarianza Longitudinal
Aplicaremos el mismo proceso de MGCFA para evaluar la invarianza a lo largo del tiempo:

  +   Comparar los modelos (M1 a M6) entre diferentes puntos de medición.
  +   Asegurar que el PHQ-9 mide el constructo de depresión de manera consistente en diferentes momentos.

4. Criterios de Evaluación

Para cada paso del MGCFA, evaluaremos el cambio en los estadísticos de ajuste del modelo:

ΔCFI < 0.01
ΔRMSEA < 0.015
ΔSRMR < 0.030

Si estos criterios se cumplen, consideraremos que se ha logrado la invarianza en ese nivel.

5. Análisis de Sensibilidad

  +   Realizar un emparejamiento por puntaje de propensión entre participantes indígenas y no indígenas.
  +   Repetir los análisis MGCFA con la muestra emparejada para controlar posibles variables confusoras sociodemográficas.

Preparación datos
```{r, message=FALSE}
cat("\014")
rm(list = ls())
gc()

library(semTools)
library(influence.SEM)
library(dplyr)
library(lavaan)
library(psych)   
library(semPlot)
library(car)
library(stringr)
library(sjlabelled)
library(sjmisc)
library(here)
```


### Load data
```{r}
load(here("data/BBDD_ELRI_LONG.RData"))
```

### seleccionar datos 
```{r}
elri_inv <- BBDD_ELRI_LONG %>% 
  remove_all_labels() %>% 
  mutate(
    g5_1 = coalesce(g5_1, g5_1_v1, g5_1_v2),
    g5_2 = coalesce(g5_2, g5_2_v1, g5_2_v2),
    g5_3 = coalesce(g5_3, g5_3_v1, g5_3_v2),
    g5_4 = coalesce(g5_4, g5_4_v1, g5_4_v2),
    g5_5 = coalesce(g5_5, g5_5_v1, g5_5_v2),
    g5_6 = coalesce(g5_6, g5_6_v1, g5_6_v2),
    g5_7 = coalesce(g5_7, g5_7_v1, g5_7_v2),
    g5_8 = coalesce(g5_8, g5_8_v1, g5_8_v2),
    g5_9 = coalesce(g5_9, g5_9_v1, g5_9_v2), 
    across(c(a1, g5_1:g5_9), ~na_if(., 88)),
    across(c(a1, g5_1:g5_9), ~na_if(., 99)),
    across(c(a1, g5_1:g5_9), ~na_if(., 8888)),
    across(c(a1, g5_1:g5_9), ~na_if(., 9999))) %>% 
  mutate(indi = case_when(a1 %in% 1:11 ~ "indi",
                          a1 == 12 ~ "no_indi")) %>% 
  filter(!is.na(indi)) %>% 
  select(folio, ano, indi, g5_1, g5_2, g5_3, g5_4, g5_5, g5_6, g5_7, g5_8, g5_9) 


rm(BBDD_ELRI_LONG)
glimpse(elri_inv)
elri_inv %>% frq(ano)
elri_inv %>% frq(indi)
```

### Separar datos por año
```{r}
data_2016 <- elri_inv %>% filter(ano == 2016)
data_2018 <- elri_inv %>% filter(ano == 2018)
data_2021 <- elri_inv %>% filter(ano == 2021)
data_2023 <- elri_inv %>% filter(ano == 2023)
```


### Separar datos por grupo indi/no_indi
```{r}
data_indi <- elri_inv %>% filter(indi == "indi")
data_no_indi <- elri_inv %>% filter(indi == "no_indi")
```


## Definir modelos de medición




```{r}
model_1f <- '
  depression =~ g5_1 + g5_2 + g5_3 + g5_4 + g5_5 + g5_6 + g5_7 + g5_8 + g5_9
'

model_2f <- '
  somatic =~ g5_3 + g5_4 + g5_5 + g5_7 + g5_8
  nonsomatic =~ g5_1 + g5_2 + g5_6 + g5_9
'
```


## Invarianza longitudinal 
```{r}
# Modelo de un factor
fit_1f_configural_year <- cfa(model_1f,
                              data = elri_inv,
                              group = "ano",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_1f_metric_year <- cfa(model_1f,
                          data = elri_inv,
                          group = "ano",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_1f_scalar_year <- cfa(model_1f,
                          data = elri_inv,
                          group = "ano",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```

### Comparar modelos anidados
```{r}
anova(fit_1f_configural_year, fit_1f_metric_year)
anova(fit_1f_metric_year, fit_1f_scalar_year)
```


### Modelo de dos factores
```{r}
fit_2f_configural_year <- cfa(model_2f,
                              data = elri_inv,
                              group = "ano",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2f_metric_year <- cfa(model_2f,
                          data = elri_inv,
                          group = "ano",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2f_scalar_year <- cfa(model_2f,
                          data = elri_inv,
                          group = "ano",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

```


### Comparar modelos anidados
```{r}
anova(fit_2f_configural_year, fit_2f_metric_year)
anova(fit_2f_metric_year, fit_2f_scalar_year)
```


## Invarianza intergrupal (indi vs no_indi) para cada año 

### 2016 
### Modelo de un factor

```{r}
fit_2016_1f_configural <- cfa(model_1f,
                              data = data_2016,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2016_1f_metric <- cfa(model_1f,
                          data = data_2016,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2016_1f_scalar <- cfa(model_1f,
                          data = data_2016,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```

### Comparar modelos anidados
```{r}
anova(fit_2016_1f_configural, fit_2016_1f_metric)
anova(fit_2016_1f_metric, fit_2016_1f_scalar)
```

### Modelo de dos factores
```{r}
fit_2016_2f_configural <- cfa(model_2f,
                              data = data_2016,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2016_2f_metric <- cfa(model_2f,
                          data = data_2016,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2016_2f_scalar <- cfa(model_2f,
                          data = data_2016,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```

### Comparar modelos anidados
```{r}
anova(fit_2016_2f_configural, fit_2016_2f_metric)
anova(fit_2016_2f_metric, fit_2016_2f_scalar)
```


### 2018 
### Modelo de un factor
```{r}

fit_2018_1f_configural <- cfa(model_1f,
                              data = data_2018,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2018_1f_metric <- cfa(model_1f,
                          data = data_2018,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2018_1f_scalar <- cfa(model_1f,
                          data = data_2018,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```

### Comparar modelos anidados
```{r}
anova(fit_2018_1f_configural, fit_2018_1f_metric)
anova(fit_2018_1f_metric, fit_2018_1f_scalar)
```

### Modelo de dos factores
```{r}
fit_2018_2f_configural <- cfa(model_2f,
                              data = data_2018,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2018_2f_metric <- cfa(model_2f,
                          data = data_2018,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2018_2f_scalar <- cfa(model_2f,
                          data = data_2018,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```


### Comparar modelos anidados
```{r}
anova(fit_2018_2f_configural, fit_2018_2f_metric)
anova(fit_2018_2f_metric, fit_2018_2f_scalar)
```


### 2021 
### Modelo de un factor  
```{r}
fit_2021_1f_configural <- cfa(model_1f,
                              data = data_2021,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2021_1f_metric <- cfa(model_1f,
                          data = data_2021,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2021_1f_scalar <- cfa(model_1f,
                          data = data_2021,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```

### Comparar modelos anidados
```{r}
anova(fit_2021_1f_configural, fit_2021_1f_metric)
anova(fit_2021_1f_metric, fit_2021_1f_scalar)
```


### Modelo de dos factores
```{r}
fit_2021_2f_configural <- cfa(model_2f,
                              data = data_2021,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2021_2f_metric <- cfa(model_2f,
                          data = data_2021,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2021_2f_scalar <- cfa(model_2f,
                          data = data_2021,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```


### Comparar modelos anidados
```{r}
anova(fit_2021_2f_configural, fit_2021_2f_metric)
anova(fit_2021_2f_metric, fit_2021_2f_scalar)
```


### 2023 
### Modelo de un factor
```{r}
fit_2023_1f_configural <- cfa(model_1f,
                              data = data_2023,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2023_1f_metric <- cfa(model_1f,
                          data = data_2023,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2023_1f_scalar <- cfa(model_1f,
                          data = data_2023,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

```


### Comparar modelos anidados
```{r}
anova(fit_2023_1f_configural, fit_2023_1f_metric)
anova(fit_2023_1f_metric, fit_2023_1f_scalar)
```


### Modelo de dos factores
```{r}
fit_2023_2f_configural <- cfa(model_2f,
                              data = data_2023,
                              group = "indi",
                              estimator = "WLSMV",
                              ordered = paste0("g5_", 1:9))

fit_2023_2f_metric <- cfa(model_2f,
                          data = data_2023,
                          group = "indi",
                          group.equal = c("loadings"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))

fit_2023_2f_scalar <- cfa(model_2f,
                          data = data_2023,
                          group = "indi",
                          group.equal = c("loadings", "thresholds"),
                          estimator = "WLSMV",
                          ordered = paste0("g5_", 1:9))
```


### Comparar modelos anidados
```{r}
anova(fit_2023_2f_configural, fit_2023_2f_metric)
anova(fit_2023_2f_metric, fit_2023_2f_scalar)
```













